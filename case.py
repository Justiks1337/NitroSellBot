import disnake
from random import randint
from changing_balance import replenishment_of_funds, withdrawal_of_funds


class CaseButtons(disnake.ui.View):
    @disnake.ui.button(label="–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å (10 —Ä—É–±–ª–µ–π)", emoji="üëê", custom_id="open_case", style=disnake.ButtonStyle.success)
    async def open_case_button_callback(self, button, inter):
        await open_case(inter)

    @disnake.ui.button(label="–í–µ—Ä–Ω—É—Ç—å—Å—è", emoji="üëà", custom_id="Back", style=disnake.ButtonStyle.primary)
    async def back_button_callback(self, button, inter):
        pass

    async def on_error(self, error, item, inter):
        pass


class ReopenCaseButtons(disnake.ui.View):
    @disnake.ui.button(label="–í–µ—Ä–Ω—É—Ç—å—Å—è", emoji="üëà", custom_id="Back_to_case", style=disnake.ButtonStyle.gray)
    async def back_to_case_button_callback(self, button, inter):
        await inter.response.edit_message(embed=disnake.Embed(description="–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ –Ω–∞–∂–º–∏ –Ω–∞ \"–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å\" \n **–í –∫–µ–π—Å–∞—Ö –±–æ–ª—å—à–∏–µ —à–∞–Ω—Å—ã –Ω–∞ –≤—ã–∏–≥—Ä—ã—à!**"), view=CaseButtons())


async def open_case(inter):
    await withdrawal_of_funds(inter, 10)
    for i in range(5):
        rnd_int = randint(0, 15)
        await inter.message.edit(embed=disnake.Embed(title="–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞...", description=f"**–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤... \n ======={rnd_int}======**"))
    await replenishment_of_funds(inter, rnd_int)
    await inter.response.edit_message(embed=disnake.Embed(title="–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!", description=f"–í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {rnd_int}:money_with_wings:"), view=ReopenCaseButtons())
