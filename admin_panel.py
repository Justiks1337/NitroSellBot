import disnake
from DataBaseAssistant import change, full_select
from disnake import TextInputStyle


class AdminPanelView(disnake.ui.View):
    @disnake.ui.button(label="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä", emoji="‚ûï", style=disnake.ButtonStyle.primary, custom_id="create_new_product")
    async def create_new_product_button_callback(self, button, inter):
        await inter.response.send_message(embed=disnake.Embed(description="–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"), view=CategoryMenuView())

    @disnake.ui.button(label="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", emoji="‚ûñ", style=disnake.ButtonStyle.primary, custom_id="delete_product")
    async def delete_product_button_callback(self, button, inter):
        await inter.response.send_modal(InputDeleteProduct())

    @disnake.ui.button(label="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä", emoji="‚èÆÔ∏è", style=disnake.ButtonStyle.primary, custom_id="change_product")
    async def change_product_button_callback(self, button, inter):
        await inter.response.send_modal(InputEditProduct())

    @disnake.ui.button(custom_id="Back", emoji="üëà", label="–í–µ—Ä–Ω—É—Ç—å—Å—è", style=disnake.ButtonStyle.gray)
    async def back_button_callback(self, button, inter):
        pass


async def show_admin_menu(inter):
    show_products = "" #–∞–¥–º–∏–Ω –Ω–∞–¥—Ä–∏—Å—Ç–∞–ª –≥–æ–≤–Ω–æ–∫–æ–¥–∞
    products = await full_select("SELECT * FROM products")
    for i in await products.fetchall():
        show_products = show_products + str(i) + '\n'
    await inter.response.edit_message(embed=disnake.Embed(title="–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤", description=show_products), view=AdminPanelView())


class InputNewProduct(disnake.ui.Modal):
    """
    –ö–ª–∞—Å—Å InputNewProduct –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ admin_panel/create_new_product_button_callback

    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç disnake.ui.Modal
    """
    def __init__(self, category):
        self.category = category
        components = [disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", custom_id="product_name", style=TextInputStyle.short, max_length=100,), disnake.ui.TextInput(label="–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞", custom_id="product_price", style=TextInputStyle.short, max_length=100,)]
        super().__init__(title="Create Tag", components=components, custom_id="money_amount")

    async def callback(self, inter: disnake.ModalInteraction):
        await add_new_product(inter, self.category)


class CategoryMenu(disnake.ui.Select):
    def __init__(self):
        options = [
                disnake.SelectOption(label="Discord", emoji="üëå", description="–±–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏–∏"),
                disnake.SelectOption(label="Telegram", emoji="üëå", description="–±–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏–∏"),
                disnake.SelectOption(label="Minecraft", emoji="üëå", description="–±–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏–∏"),
                disnake.SelectOption(label="–ü—Ä–æ—á–µ–µ", emoji="üëå", description="–±–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏–∏"),
            ]
        super().__init__(placeholder="Select an option", max_values=1, min_values=1, options=options)

    async def callback(self, inter):
        if self.values[0] == "Discord":
            await inter.response.send_modal(InputNewProduct(1))
        elif self.values[0] == "Telegram":
            await inter.response.send_modal(InputNewProduct(2))
        elif self.values[0] == "Minecraft":
            await inter.response.send_modal(InputNewProduct(3))
        elif self.values[0] == "–ü—Ä–æ—á–µ–µ":
            await inter.response.send_modal(InputNewProduct(4))


class CategoryMenuView(disnake.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(CategoryMenu())

    @disnake.ui.button(emoji="üëà", label="–í–µ—Ä–Ω—É—Ç—å—Å—è", style=disnake.ButtonStyle.gray, custom_id="Back", row=2)
    async def back_button_callback(self, button, inter):
        pass


async def add_new_product(inter, category):
    await change("INSERT INTO products VALUES (?, ?, ?, ?)", (None, inter.text_values["product_name"], inter.text_values["product_price"], category))
    await inter.response.send_message(embed=disnake.Embed(description="–¢—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä!"), ephemeral=True)


class InputDeleteProduct(disnake.ui.Modal):
    """
    –ö–ª–∞—Å—Å InputNewProduct –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ admin_panel/delete_product_button_callback

    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç disnake.ui.Modal
    """
    def __init__(self):
        components = [disnake.ui.TextInput(label="id —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞", custom_id="product_id", style=TextInputStyle.short, max_length=100)]
        super().__init__(title="Create Tag", components=components, custom_id="money_amount")

    async def callback(self, inter: disnake.ModalInteraction):
        await change("DELETE FROM products WHERE id = ?", (inter.text_values["product_id"], ))
        await inter.response.send_message(embed=disnake.Embed(description="*–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω*"), ephemeral=True)


class InputEditProduct(disnake.ui.Modal):
    """
    –ö–ª–∞—Å—Å InputEditProduct –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ admin_panel/change_product_button_callback

    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç disnake.ui.Modal
    """
    def __init__(self):
        components = [disnake.ui.TextInput(label="id —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ id —Ç–æ–≤–∞—Ä–∞", custom_id="product_id", style=TextInputStyle.short, max_length=100), disnake.ui.TextInput(label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞", custom_id="product_name", style=TextInputStyle.short, max_length=100,), disnake.ui.TextInput(label="–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞", custom_id="product_price", style=TextInputStyle.short, max_length=100,)]
        super().__init__(title="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è", components=components, custom_id="money_amount")

    async def callback(self, inter: disnake.ModalInteraction):
        await change("UPDATE products SET name = ?, price = ? WHERE id = ? ", (inter.text_values["product_name"], inter.text_values["product_price"], inter.text_values["product_id"]))
        await inter.response.send_message(embed=disnake.Embed(description="*–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω*"), ephemeral=True)